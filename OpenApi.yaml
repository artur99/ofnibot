swagger: "2.0"
info:
  description: "This is a bot for identifying movies/songs by name or products by Barcode & tools"
  version: "1.0.0"
  title: "Ofnibot"
  license:
    name: "CC0 1.0"
    url: "https://creativecommons.org/publicdomain/zero/1.0/"
host: "ofnibot.local"
basePath: "/api/1"
schemes:
- "http"
paths:
  /movies:
    get:
      tags:
      - "Movies"
      summary: "Get similar movies"
      description: "Search for similar movies by a movie name"
      operationId: "getMovie"
      produces:
      - "application/json"
      - "text/yaml"
      parameters:
      - name: "name"
        in: "query"
        description: "The movie name to search for"
        required: true
        type: "string"
      - name: "pretty"
        in: "query"
        description: "Whenever the code to be prettified or not\n\nDefault: (false)"
        required: false
        type: "boolean"
      - name: "sort_by_score"
        in: "query"
        description: "If to sort the results by the User Score on TMDb\n\nDefault: (false)"
        required: false
        type: "boolean"
      - name: "limit"
        in: "query"
        description: "A maximum number of similar movies to be returned\n\nDefault: (false)"
        required: false
        type: "integer"
      responses:
        200:
          description: "Succesful operation"
          schema:
            $ref: "#/definitions/Movies"
        405:
          description: "Invalid input"
        404:
          description: "Movie not found"
  /songs:
    get:
      tags:
      - "Songs"
      summary: "Get similar songs"
      description: "Search for similar movies by a movie name"
      operationId: "getSong"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "name"
        in: "query"
        description: "The song name to search for"
        required: true
        type: "string"
      - name: "pretty"
        in: "query"
        description: "Whenever the code to be prettified or not\n\nDefault: (false)"
        required: false
        type: "boolean"
      - name: "sort_by_popularity"
        in: "query"
        description: "If to sort the results by their popularity (on last.fm)\n\nDefault: (false)"
        required: false
        type: "boolean"
      - name: "limit"
        in: "query"
        description: "A maximum number of similar songs to be returned\n\nDefault: (false)"
        required: false
        type: "integer"
      responses:
        200:
          description: "Succesful operation"
          schema:
            $ref: "#/definitions/Songs"
        405:
          description: "Invalid input"
        404:
          description: "Song not found"
securityDefinitions:
  petstore_auth:
    type: "oauth2"
    authorizationUrl: "http://petstore.swagger.io/oauth/dialog"
    flow: "implicit"
    scopes:
      write:pets: "modify pets in your account"
      read:pets: "read your pets"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  Movies:
    type: "object"
    properties:
      movie:
        $ref: "#/definitions/Movie"
      similar_movies_count:
        type: "integer"
        description: "Number of items in 'similar_movies'"
      similar_movies:
        type: "array"
        items:
          $ref: "#/definitions/Movie"
  Movie:
    type: "object"
    properties:
      title:
        type: "string"
        description: "Movie title"
      overview:
        type: "string"
        description: "Movie overview"
      link:
        type: "string"
        description: "Movie link"
      release_year:
        type: "integer"
        description: "Movie release year"
      image:
        type: "string"
        description: "Movie cover image"
      score:
        type: "integer"
        description: "Movie score"
  Songs:
    type: "object"
    properties:
      movie:
        $ref: "#/definitions/Song"
      similar_songs_count:
        type: "integer"
        description: "Number of items in 'similar_songs'"
      similar_movies:
        type: "array"
        items:
          $ref: "#/definitions/Song"
  Song:
    type: "object"
    properties:
      title:
        type: "string"
        description: "Song title"
      overview:
        type: "string"
        description: "Song overview"
      link:
        type: "string"
        description: "Song link"
      release_year:
        type: "integer"
        description: "Song release year"
      image:
        type: "string"
        description: "Song cover image"
      score:
        type: "integer"
        description: "Movie score"
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
